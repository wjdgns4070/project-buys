<!-- views/index.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>음식 주문 페이지</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">



    <style>
        .black_jack_img {
            width: 200px;
            height: 100px;
        }

        body {
            margin-left: 200px;
            margin-top: 0;
            background-image: url('images/back.jpg');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            font-family: 'Arial', sans-serif;
        }


        .close-button {
            position: absolute;
            top: 0px;
            right: 30px;
            font-size: 70px;
            font-weight: bold;
            cursor: pointer;
            color: #fff;
        }

        /* 기존 스타일 */
        .main-menu,
        .side-menu,
        .drink {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-around;
            list-style: none;
            margin-bottom: 20px;
            padding: 0;
        }

        .menu-image-container {
            box-sizing: border-box;
            width: calc(33.33% - 20px);
            margin: 10px;
            position: relative;
            background-color: #fff;
        }

        .menu-image {
            width: 100%;
            height: 200px;
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
        }

        .menu-button {
            width: 100%;
            position: absolute;
            bottom: 10px;
            left: 50%;
            transform: translateX(-50%);
            padding: 8px 16px;
            background-color: #fbfbe7;
            /* 장바구니 추가 버튼 배경색 */
            color: black;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            z-index: 1;
        }

        .sidebar {
            height: 100vh;
            /* 뷰포트 높이로 설정 */
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            width: 200px;
            background-image: url('images/sideback.jpg');
            z-index: 1000;
            margin-top: 0;
            /* 상단 여백을 0으로 설정 */
            text-align: center;

        }

        .sidebar-section {
            padding: 15px;
            border-bottom: 1px solid #ddd;
            cursor: pointer;
            font-size: 18px;
            /* 폰트 크기 조정 */
        }


        .sidebar-section.active {
            background-color: #555555;
            /* 활성 섹션에 대한 더 밝은 배경 색상 */
            color: white;
        }

        .mycoin {
            margin-top: 20px;
            padding: 10px;
            font-size: 18px;
        }

        .gamestart {

            font-size: 20px;
            width: 200px;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            background-color: #555555;
        }

        .cart-button:hover {
            background-color: #45a049;

        }
        .backbox{
            background-color: #555555;
            width: 90%;
            height: 580px;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0, 0, 0);
            background-color: rgba(0, 0, 0, 1);
            padding-top: 0px;

        }


        .modal-content {
            margin: auto;
            display: block;
            width: 80%;
            max-width: 1138px;
            /* 조정된 너비 */
            max-height: 712px;
            /* 조정된 높이 */
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        .modal-image {
            width: 100%;
            height: auto;
        }

        .modal-description {
            color: #fff;
            text-align: center;
            padding: 10px;
        }

        /* 페이지 전체에 Font Awesome 아이콘 적용 */
        i {
            font-size: 24px;
            /* 전체 아이콘 크기 지정 */
            margin-right: 5px;
            /* 아이콘 간격 조정 */
        }
        /* 모달 창 스타일 */
.modal-description button {
    padding: 10px 20px;
    font-size: 18px;
    background-color:#555555;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

/* 버튼에 호버 효과 추가 */
.modal-description button:hover {
    background-color: black;
}
/* 모달 창 스타일 */
.modal-description .close {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 70px;
    color: white;
    cursor: pointer;
}
        
    </style>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
    <!-- 네비게이션 바 추가 -->
    <!-- <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">J-order</a>
        </div>
    </nav> -->
    <div class="sidebar" id="sidebar">
        <!-- 각 섹션에 해당하는 클래스를 추가하고, data-target 속성을 이용하여 연결합니다. -->
        <div class="sidebar-section">J-order</div>
        <div class="sidebar-section" data-target="main-menu">메인 메뉴</div>
        <div class="sidebar-section" data-target="side-menu">사이드 메뉴</div>
        <div class="sidebar-section" data-target="drink">음료</div>
        <div class="mycoin">mycoin: <span id="mycoinAmount">0</span>개</div>
        <div class="black_jack_img"><img src="/images/gamestart.jpg" alt=""
                style="margin-top: 20px; width: 200px; height: 100px;"></div>
        <button class="gamestart">게임하기</button>

        <div class="coinbuy_img"><img src="/images/coinbuy.jpg" alt=""
                style="margin-top: 40px; width: 200px; height: 100px;"></div>
        <button id="coinpur" onclick="openCoinPurchaseModal()"
            style=" width: 200px;  border: none; background-color: #555555; color: #fff; font-size: 20px;">코인으로
            구매하기</button>

    </div>

    <form id="menu-form" action="/addToCart" method="post">
        <h1>
            <div class="main-div">메인 메뉴</div>
        </h1>
        <ul id="menu-list" class="main-menu">
            <!-- 이미지와 버튼 추가 -->
            <li class="menu-image-container">
                <img src="/images/pappe.jpg" alt="페퍼로니 피자" class="menu-image" data-item="페퍼로니 피자" data-id="1"
                    data-price="12000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>

            <li class="menu-image-container">
                <img src="/images/hwai.jpg" alt="하와이안 피자" class="menu-image" data-item="하와이안 피자" data-id="2"
                    data-price="17000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/bulgogi.jpg" alt="불고기 피자" class="menu-image" data-item="불고기 피자" data-id="3"
                    data-price="15000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/saewu.jpg" alt="통새우 피자" class="menu-image" data-item="통새우 피자" data-id="4"
                    data-price="17000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/cheese.jpg" alt="치즈 피자" class="menu-image" data-item="치즈 피자" data-id="5"
                    data-price="13000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/potato.jpg" alt="스윗포테이토 피자" class="menu-image" data-item="스윗포테이토 피자" data-id="6"
                    data-price="15000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
        </ul>

        <h1>
            <div class="side-div">사이드 메뉴</div>
        </h1>
        <ul class="side-menu">

            <li class="menu-image-container">
                <img src="/images/macspa.jpg" alt="맥앤치즈 스파게티" class="menu-image" data-item="맥앤치즈 스파게티 피자" data-id="7"
                    data-price="7000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/cheeseoven.jpg" alt="치즈오븐 스파게티" class="menu-image" data-item="치즈오븐 스파게티" data-id="8"
                    data-price="7000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/hotwing.jpg" alt="핫윙" class="menu-image" data-item="핫 윙 5개" data-id="9"
                    data-price="4000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/hotbong.jpg" alt="핫봉" class="menu-image" data-item="핫 봉 5개" data-id="10"
                    data-price="4000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/cheeseball.jpg" alt="치즈볼" class="menu-image" data-item="치즈볼 6개" data-id="11"
                    data-price="4000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/ovencheese.jpg" alt="오븐치즈감자" class="menu-image" data-item="오븐치즈감자" data-id="12"
                    data-price="6000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
        </ul>

        <h1>
            <div class="drink-div">음료</div>
        </h1>
        <ul class="drink">

            <li class="menu-image-container">
                <img src="/images/cozero.jpg" alt="코카콜라 제로" class="menu-image" data-item="코카콜라 제로" data-id="13"
                    data-price="3000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/sider.jpg" alt="사이다" class="menu-image" data-item="사이다" data-id="14"
                    data-price="3000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/cloudbeer.jpg" alt="클라우드 맥주" class="menu-image" data-item="클라우드 맥주" data-id="15"
                    data-price="5000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>

            <li class="menu-image-container">
                <img src="/images/asahi.jpg" alt="아사히 맥주" class="menu-image" data-item="아사히 맥주" data-id="16"
                    data-price="5000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/kgb.jpg" alt="kgb 맥주" class="menu-image" data-item="kgb 맥주" data-id="17"
                    data-price="5000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>
            <li class="menu-image-container">
                <img src="/images/cruser.jpg" alt="크루저 맥주" class="menu-image" data-item="크루저 맥주" data-id="18"
                    data-price="5000원">
                <button type="button" class="menu-button">장바구니에 추가</button>
            </li>

        </ul>
    </form>
    <br><br>
    <br><br>
    <br><br>
    <br><br>
    <br><br>

    <div id="myModal" class="modal">
        <span class="close" onclick="closeModal()"><i class="fas fa-times"></i></span>
        <img class="modal-content" id="img01">
        <div id="caption" class="modal-description"></div>
    </div>

    <div class="modal" id="descriptionModal" style="z-index: 2000;">
        <div class="modal-content">

            <div class="modal-description">
                
                <div class="backbox">

                <h1>신개념 메뉴판 J_order</h1>
                <h3>태블릿 이용규칙!</h3>
                <h2>1. 태이블및 테블릿 파손하시면 안돼요!</h2> <br>
                <h2>2. 음식을 주문하고 들어온 코인으로 black_jack 한 판!?</h2> <br>
                <h2>* 음식을 장바구니에 담고 장바구니 확인을 통해 주문하시면 돼용!~ </h2><br>
                <h2>3. 불린 코인으로 여러가지 이벤트가 있으니 많관부!!</h2>
                <br>
                <h2>테이블 밑에 수저,젓가락,휴지 있으니 사용해주시면 되세요~</h2>
                <br> <p style="color: blanchedalmond;"> 화면 아무곳이나 터치해주세요!!</p>

            </div>
            </div>
        </div>
    </div>

    <!-- --------------------------------------- -->
    <div class="modal" id="coinPurchaseModal">
        <div class="modal-description">
            <span class="close" onclick="closeCoinPurchaseModal()">&times;</span>
            <h2>코인으로 상품 구매하기</h2>
            <p>현재 보유 코인: <span id="currentMycoin">0</span>개</p>
            <div id="products">
                <!-- 상품과 체크박스 표시할 부분 -->
            </div>
            <button onclick="purchaseProducts()">구매하기</button>
        </div>
    </div>
    
    <!-- -------------------------------------------------- -->
    <script src="/js.js"></script>
    <!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script> 네비게이션 부트스트랩 -->

    <!-- 이 부분은 이미지를 눌렀을 때 팝업 창으로 나오는 코드입니다 -->

    <script>
        // ------------------------------------------------
        window.onload = function () {
            console.log('onload')
            // 쿠키에서 mycoin 값 가져오기
            var coinValue = getCookie('mycoin');
            console.log(document.cookie)
            console.log(coinValue)
            // 가져온 값이 없거나 undefined이면 기본값 0으로 설정
            coinValue = coinValue || 0;

            // UI에 반영
            document.getElementById('currentMycoin').innerText = coinValue;


        };
        // 코인으로 구매 모달 열기
        function openCoinPurchaseModal() {
            document.getElementById('coinPurchaseModal').style.display = 'block';
            // 제품은 동적으로 로딩하거나 정적으로 추가할 수 있습니다.
            // 여기서는 두 개의 제품을 가정하겠습니다 (id 1과 2).
            document.getElementById('products').innerHTML = `
            <img src="/images/sider.jpg" style="width: 150px; height: 150px;">
            <input type="checkbox" id="product1" name="product1" value="10"> 음료 - 30코인<br>
            <img src="/images/cloudbeer.jpg" style="width: 150px; height: 150px;">
            <input type="checkbox" id="product2" name="product2" value=30"> 맥주 - 50코인<br>
            <img src="/images/macspa.jpg" style="width: 150px; height: 150px;" >
            <input type="checkbox" id="product3" name="product3" value="60"> 사이드 메뉴 - 60코인<br>
            <img src="/images/saewu.jpg" style="width: 150px; height: 150px;">
            <input type="checkbox" id="product3" name="product3" value="90"> 메인 메뉴 - 90코인<br>
        `;
        }

        // 코인으로 구매 모달 닫기
        function closeCoinPurchaseModal() {
            document.getElementById('coinPurchaseModal').style.display = 'none';
        }

        // 구매 버튼 클릭 처리 함수
        function purchaseProducts() {
            // 쿠키에서 현재 코인 갯수 읽어오기
            const currentCoins = parseInt(getCookie('mycoin')) || 0;

            // 선택된 상품들의 코인 갯수 합산 계산
            let selectedCoins = 0;
            const checkboxes = document.querySelectorAll('input[type="checkbox"]:checked');
            checkboxes.forEach(checkbox => {
                selectedCoins += parseInt(checkbox.value);
            });

            // 코인 부족 여부 확인
            if (currentCoins < selectedCoins) {
                // 코인이 부족한 경우 알림 띄우기
                alert('코인이 부족합니다. 구매할 수 없습니다.');
                return;
            }

            // 쿠키에서 코인 빼기
            const remainingCoins = currentCoins - selectedCoins;
            setCookie('mycoin', remainingCoins, 365);

            // 여기에 실제 구매 처리 로직을 추가하세요 (예: 서버에 구매 요청 등)

            // 모달 닫기
            closeCoinPurchaseModal();

            window.location.reload();
        }

        // 쿠키에서 특정 이름의 쿠키값을 읽어오는 함수
        function getCookie(cookieName) {
            const name = cookieName + '=';
            const decodedCookie = decodeURIComponent(document.cookie);
            const cookieArray = decodedCookie.split(';');
            for (let i = 0; i < cookieArray.length; i++) {
                let cookie = cookieArray[i];
                while (cookie.charAt(0) === ' ') {
                    cookie = cookie.substring(1);
                }
                if (cookie.indexOf(name) === 0) {
                    return cookie.substring(name.length, cookie.length);
                }
            }
            return '';
        }

        // 쿠키에 특정 이름의 쿠키값을 설정하는 함수
        function setCookie(cookieName, value, days) {
            const d = new Date();
            d.setTime(d.getTime() + (days * 24 * 60 * 60 * 1000));
            const expires = 'expires=' + d.toUTCString();
            document.cookie = cookieName + '=' + value + ';' + expires + ';path=/';
        }


        // ------------------------------------------------




        // 페이지 스크롤 이벤트를 감지하여 사이드 바의 배경 색을 변경하는 스크립트
        document.addEventListener('DOMContentLoaded', function () {
            var sidebar = document.getElementById('sidebar');
            var mainMenu = document.querySelector('.main-div');
            var sideMenu = document.querySelector('.side-div');
            var drink = document.querySelector('.drink-div');

            // 각 섹션의 위치 계산
            var mainMenuTop = mainMenu.offsetTop;
            var sideMenuTop = sideMenu.offsetTop;
            var drinkTop = drink.offsetTop;

            // 클릭 이벤트 추가
            var sidebarSections = document.querySelectorAll('.sidebar-section');
            sidebarSections.forEach(function (section) {
                section.addEventListener('click', function () {
                    var target = section.getAttribute('data-target');
                    var targetTop = 0;

                    // 클릭된 섹션에 따라 이동할 위치 결정
                    if (target === 'main-menu') {
                        targetTop = mainMenuTop;
                    } else if (target === 'side-menu') {
                        targetTop = sideMenuTop;
                    } else if (target === 'drink') {
                        targetTop = drinkTop;
                    }

                    // 스크롤 이동
                    window.scrollTo({
                        top: targetTop,
                        behavior: 'smooth'
                    });

                    // 선택된 섹션 표시
                    setActiveSection(target);
                });
            });
            

            openModal();

            // 추가된 코드: 모달 열기 함수
            function openModal() {
                const modal = document.getElementById('descriptionModal');
                modal.style.display = 'block';
            }

            window.addEventListener('click', function (event) {
                const modal = document.getElementById('descriptionModal');

                // 모달 내부를 클릭하더라도 모달을 닫기
                if (event.target === modal || modal.contains(event.target)) {
                    // 모달 내부 클릭이거나 모달 내부의 자식 엘리먼트를 클릭한 경우에는 닫지 않음
                    modal.style.display = 'none';
                }


            });

            // 페이지 스크롤 이벤트
            window.addEventListener('scroll', function () {
                var scrollPosition = window.scrollY;

                // 각 섹션 위치와 현재 스크롤 위치를 비교하여 선택된 섹션 표시
                if (scrollPosition >= mainMenuTop && scrollPosition < sideMenuTop) {
                    setActiveSection('main-menu');
                } else if (scrollPosition >= sideMenuTop && scrollPosition < drinkTop) {
                    setActiveSection('side-menu');
                } else if (scrollPosition >= drinkTop) {
                    setActiveSection('drink');
                } else {
                    setActiveSection(null);
                }
            });

            function setActiveSection(section) {
                // 선택된 섹션 표시
                var sections = document.querySelectorAll('.sidebar-section');
                sections.forEach(function (item) {
                    item.classList.remove('active');
                });

                if (section) {
                    var activeSection = document.querySelector('.sidebar-section[data-target="' + section + '"]');
                    activeSection.classList.add('active');
                }
            }
        });

        // 클라이언트 측 코드
        // 클라이언트 측 코드


        let totalAmount = 0;

        function showCart() {
            const cartCookie = document.cookie.split('; ')
                .find(cookie => cookie.startsWith('cart='));

            if (!cartCookie) {
                alert('장바구니가 비어 있습니다.');
                return;
            }

            const decodedCartValue = decodeURIComponent(cartCookie.split('=')[1]);
            const cartItems = JSON.parse(decodedCartValue);

            // 현재까지의 누적 총 금액 계산
            totalAmount = cartItems.reduce((sum, item) => sum + parseFloat(item.price), 0);

            // 모달 창에 장바구니 내역 표시
            const modal = document.getElementById('myModal');
            const modalContent = modal.querySelector('.modal-description');

            modalContent.innerHTML = `
        <h2>장바구니 내역</h2>
        ${cartItems.map(item => `
            <p>${item.name} - ₩${parseFloat(item.price)}원 
            <button type="button" class="delete-button" data-id="${item.id}">삭제</button></p>
            <hr>
        `).join('')}
        <p><strong>총 금액:</strong> ₩${totalAmount}원</p>
    `;

            // 모달 창 열기
            modal.style.display = 'block';

            // "구매하기" 버튼 추가
            const purchaseButton = document.createElement('button');
            purchaseButton.textContent = '구매하기';
            purchaseButton.addEventListener('click', function () {
                // 구매 처리
                purchaseItems();
            });
            modalContent.appendChild(purchaseButton);

            modalContent.appendChild(purchaseButton);

            // 모달 창 우측 상단에 "닫기" 버튼 추가
            const closeButton = document.createElement('span');
            closeButton.innerHTML = '&times;';
            closeButton.className = 'close-button';
            closeButton.addEventListener('click', closeModal);
            modal.appendChild(closeButton);

            // "삭제" 버튼에 이벤트 리스너 추가
            const deleteButtons = modalContent.querySelectorAll('.delete-button');
            deleteButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const itemId = this.getAttribute('data-id');
                    deleteItem(itemId);
                });
            });
            // 모달 외부 클릭 시 닫기
            window.addEventListener('click', function (event) {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });
            modal.style.display = 'block';
        }
        function closeModal() {
            const modal = document.getElementById('myModal');
            modal.style.display = 'none';
        }

        // "구매하기" 버튼을 눌렀을 때 실행되는 함수
        function purchaseItems() {
            const cartCookie = document.cookie.split('; ')
                .find(cookie => cookie.startsWith('cart='));

            if (!cartCookie) {
                alert('장바구니가 비어 있습니다.');
                return;
            }

            const decodedCartValue = decodeURIComponent(cartCookie.split('=')[1]);
            const cartItems = JSON.parse(decodedCartValue);

            axios.post('/purchase', cartItems)
                .then(response => {
                    console.log('Purchase successful:', response.data);

                    // 구매가 완료되면 쿠키 초기화
                    document.cookie = 'cart=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/';

                    // mycoin 갱신
                    const mycoinAmountElement = document.getElementById('mycoinAmount');
                    const currentMycoin = parseFloat(mycoinAmountElement.textContent);

                    // 현재까지의 누적 총 금액 계산
                    const totalAmount = cartItems.reduce((sum, item) => sum + parseFloat(item.price), 0);

                    // 새로운 합계 금액을 현재 mycoin 값에 더하고 mycoin 엘리먼트 업데이트
                    const updatedMycoin = currentMycoin + totalAmount / 1000;
                    mycoinAmountElement.textContent = updatedMycoin.toFixed(0);

                    // mycoin 값을 쿠키에 저장
                    document.cookie = `mycoin=${updatedMycoin}; path=/`; // 변경된 부분

                    // 팝업 창 닫기
                    const modal = document.getElementById('myModal');
                    modal.style.display = 'none';

                    window.location.reload();
                })
                .catch(error => {
                    console.error('Purchase error:', error);
                    alert('구매 중 오류가 발생했습니다.');
                });

            
        }
        // ...
        function deleteItem(itemId) {
            const cartCookie = document.cookie.split('; ')
                .find(cookie => cookie.startsWith('cart='));

            if (!cartCookie) {
                alert('장바구니가 비어 있습니다.');
                return;
            }

            const decodedCartValue = decodeURIComponent(cartCookie.split('=')[1]);
            let cartItems = JSON.parse(decodedCartValue);

            // 선택한 아이템 삭제
            cartItems = cartItems.filter(item => item.id !== itemId);

            // 새로운 장바구니 정보를 쿠키에 저장
            document.cookie = `cart=${encodeURIComponent(JSON.stringify(cartItems))}; path=/`;

            // 모달 창 갱신
            showCart();
        }
        // 게임하기 버튼 클릭 시 블랙잭 게임 페이지로 이동하는 함수
        // 게임하기 버튼 클릭 시 블랙잭 게임 페이지로 이동하는 함수
        document.querySelector('.gamestart').addEventListener('click', function () {
            window.location.href = '/black_jack'; // 블랙잭 게임 페이지로 이동
        });



    </script>

</body>

</html>